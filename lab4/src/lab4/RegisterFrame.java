/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package lab4;

import java.awt.Container;
import java.awt.Window;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import org.mindrot.jbcrypt.BCrypt;

/**
 *
 * @author ASUS
 */
public class RegisterFrame extends javax.swing.JFrame {

    /**
     * Creates new form RegisterFrame
     */
    public RegisterFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        dateDOB = new com.toedter.calendar.JDateChooser();
        lbTitle = new javax.swing.JLabel();
        lbName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lbHintDob = new javax.swing.JLabel();
        lbGender = new javax.swing.JLabel();
        rbMale = new javax.swing.JRadioButton();
        rbFemale = new javax.swing.JRadioButton();
        lbMail = new javax.swing.JLabel();
        txtMail = new javax.swing.JTextField();
        lbMobile = new javax.swing.JLabel();
        txtMobile = new javax.swing.JTextField();
        lbPass = new javax.swing.JLabel();
        txtPass = new javax.swing.JTextField();
        lbRePass = new javax.swing.JLabel();
        txtRepass = new javax.swing.JTextField();
        lbCourses = new javax.swing.JLabel();
        cbCourses = new javax.swing.JComboBox<>();
        lbBranch = new javax.swing.JLabel();
        cbBranch = new javax.swing.JComboBox<>();
        txtSemester = new javax.swing.JLabel();
        cbSemester = new javax.swing.JComboBox<>();
        btnRegister = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnUpdatetable = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        dateDOB.setDateFormatString("yyyy-MM-dd");

        lbTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbTitle.setText("Register a New Student");

        lbName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbName.setText("Name");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("DOB");

        lbHintDob.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbHintDob.setText("(yyyy-mm-dd)");

        lbGender.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbGender.setText("Gender");

        rbMale.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rbMale.setSelected(true);
        rbMale.setText("Male");

        rbFemale.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rbFemale.setText("Female");

        lbMail.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbMail.setText("Mail Id");

        lbMobile.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbMobile.setText("Mobile No");

        txtMobile.setText("0123456789");

        lbPass.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbPass.setText("Password");

        txtPass.setText("********");

        lbRePass.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbRePass.setText("Re Password");

        txtRepass.setText("********");

        lbCourses.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbCourses.setText("Courses");

        cbCourses.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ME/ M Tect" }));

        lbBranch.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbBranch.setText("Branch");

        cbBranch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Computer Science and Engineer" }));

        txtSemester.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtSemester.setText("Semester");

        cbSemester.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1" }));

        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "gender", "mail", "mobile", "branch"
            }
        ));
        jScrollPane2.setViewportView(jTable);

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnUpdatetable.setText("UpdateTable");
        btnUpdatetable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatetableActionPerformed(evt);
            }
        });

        btnUpdate.setText("Cập nhật");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnExit.setText("Thoát");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(lbTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(89, 89, 89)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rbMale, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rbFemale, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(dateDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lbHintDob)))
                                .addGap(20, 20, 20)))
                        .addContainerGap(343, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbMail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbGender, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                                    .addComponent(lbName)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(260, 260, 260))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtMail, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(lbCourses, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(lbPass, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(lbMobile, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addComponent(lbBranch, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtSemester))
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(cbCourses, 0, 179, Short.MAX_VALUE)
                                                    .addComponent(cbBranch, 0, 0, Short.MAX_VALUE)
                                                    .addComponent(cbSemester, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtMobile, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbRePass)
                                        .addGap(3, 3, 3)
                                        .addComponent(txtRepass, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btnRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnSua)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnXoa)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnUpdatetable)))
                                .addGap(37, 37, 37))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(145, 145, 145))))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(btnExit)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lbTitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(lbGender))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rbMale)
                                .addComponent(rbFemale))))
                    .addComponent(dateDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbHintDob))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbMail)
                                    .addComponent(txtMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lbMobile)
                                    .addComponent(txtMobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lbPass)
                                    .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtRepass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbRePass)))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbCourses)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cbCourses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnSua)
                                .addComponent(btnXoa)
                                .addComponent(btnUpdatetable)
                                .addComponent(btnRegister)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbBranch)
                            .addComponent(cbBranch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnNew)
                        .addGap(1, 1, 1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSemester)
                    .addComponent(cbSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addComponent(btnUpdate)
                .addGap(18, 18, 18)
                .addComponent(btnExit)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
         System.out.println("Register Button Click");
        
        String gender = null;
        if(rbFemale.isSelected()){
            gender = "Felmale";
        }
        if(rbMale.isSelected()){
            gender = "Male";
        }
        
        String programName = cbCourses.getSelectedItem().toString();
        String branchName = cbBranch.getSelectedItem().toString();
        int semestorNo = Integer.parseInt(cbSemester.getSelectedItem().toString());
        
        Date dob = dateDOB.getDate();
            if (dob == null) {
                JOptionPane.showMessageDialog(null, "Date of Birth is Empty");
                 return;
                }

        System.out.println("name" + txtName.getText() + " dob " + dob+ 
                " gender " + gender + " mailId: " + txtMail.getText()  +
                ", mobileNo: " + txtMobile.getText() + ", password: " + txtPass.getText() +
                ", rePassword: " + txtRepass.getText() + ", program: " + programName +
                ", branch: " + branchName + ", semester: " + semestorNo );
        
        Student student = new Student(txtName.getText(),dob,gender,txtMail.getText(),
            txtMobile.getText(),txtPass.getText(), txtRepass.getText(),programName
            ,branchName,semestorNo);
        //student.setEncPassword(BCrypt.hashpw(student.getPassword(),BCrypt.gensalt()));
        Validation v = new Validation();
        List<String> errors = v.validateRegistration(student);
        if(errors.size() > 0){
            JOptionPane.showMessageDialog(null, errors.toArray()); 
            return;
        }
        else{
            RegisterDAO dao = new RegisterDAO();
            int st = dao.registerStudent(student);
            
            System.out.println(st);
            if(st == 1){
                 JOptionPane.showMessageDialog(null, "Registered Successfully"); 
                 addDataToTableModel();
            }
             if(st == -1){
                 JOptionPane.showMessageDialog(null, "Already Registered"); 
            }
              if(st == -2){
                 JOptionPane.showMessageDialog(null, "Unable to Register"); 
            }
            
        }
    }//GEN-LAST:event_btnRegisterActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
       DefaultTableModel tblModel = (DefaultTableModel) jTable.getModel();
    int selectedRowIndex = jTable.getSelectedRow();

    if (selectedRowIndex == -1) {
        JOptionPane.showMessageDialog(null, "Hãy chọn một sinh viên để xóa");
    } else {
        // Lấy giá trị trong cột ID của sinh viên được chọn
        long studentId = (long) jTable.getValueAt(selectedRowIndex, 0);

        int confirmation = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn xóa sinh viên này?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
        if (confirmation == JOptionPane.YES_OPTION) {
            int deleteResult = deleteStudent(studentId);
            if (deleteResult > 0) {
                // Xóa dòng tương ứng trong bảng
                tblModel.removeRow(selectedRowIndex);
                JOptionPane.showMessageDialog(null, "Đã xóa sinh viên thành công");
            } else if (deleteResult == 0) {
                JOptionPane.showMessageDialog(null, "Không tìm thấy sinh viên với ID đã cho");
            } else {
                JOptionPane.showMessageDialog(null, "Lỗi xóa sinh viên");
            }
        }
    }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnUpdatetableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatetableActionPerformed
        addDataToTableModel();
    }//GEN-LAST:event_btnUpdatetableActionPerformed
    private Student updatedStudent = null;
    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
      int selectedRowIndex = jTable.getSelectedRow();

    if (selectedRowIndex == -1) {
        JOptionPane.showMessageDialog(null, "Hãy chọn một sinh viên để chỉnh sửa");
        return;
    }

    DefaultTableModel tblModel = (DefaultTableModel) jTable.getModel();
    long studentId = (long) tblModel.getValueAt(selectedRowIndex, 0);
    String name = (String) tblModel.getValueAt(selectedRowIndex, 1);
    String gender = (String) tblModel.getValueAt(selectedRowIndex, 2);
    String mailId = (String) tblModel.getValueAt(selectedRowIndex, 3);
    String mobileNo = (String) tblModel.getValueAt(selectedRowIndex, 4);
    String branch = (String) tblModel.getValueAt(selectedRowIndex, 5);

    txtName.setText(name);
    if (gender.equals("Nam")) {
        rbMale.setSelected(true);
    } else if (gender.equals("Nữ")) {
        rbFemale.setSelected(true);
    }
    txtMail.setText(mailId);
    txtMobile.setText(mobileNo);
    cbBranch.setSelectedItem(branch);

    String updatedName = JOptionPane.showInputDialog(this, "Nhập tên mới:", name);
    if (updatedName == null) {
        // User canceled the input, do nothing
        return;
    }

    // Retrieve the updated values from the dialog box
    String updatedGender = rbMale.isSelected() ? "Nam" : "Nữ";
    String updatedMailId = txtMail.getText();
    String updatedMobileNo = txtMobile.getText();
    String updatedBranch = cbBranch.getSelectedItem().toString();

    // Update the student object with the retrieved values
    updatedStudent = new Student(studentId, updatedName, updatedGender, updatedMailId, updatedMobileNo, updatedBranch);

    // Call the updateStudent method to update the database
    int updateResult = updateStudent(updatedStudent);
    if (updateResult > 0) {
        // Update the table with the updated student information
        tblModel.setValueAt(updatedStudent.getName(), selectedRowIndex, 1);
        tblModel.setValueAt(updatedStudent.getGender(), selectedRowIndex, 2);
        tblModel.setValueAt(updatedStudent.getMailId(), selectedRowIndex, 3);
        tblModel.setValueAt(updatedStudent.getMobileNo(), selectedRowIndex, 4);
        tblModel.setValueAt(updatedStudent.getBranch(), selectedRowIndex, 5);

        JOptionPane.showMessageDialog(null, "Đã cập nhật thông tin sinh viên thành công");
    } else if (updateResult == 0) {
        JOptionPane.showMessageDialog(null, "Không tìm thấy sinh viên với ID đã cho");
    } else {
        JOptionPane.showMessageDialog(null, "Lỗi cập nhật thông tin sinh viên");
    }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
    DefaultTableModel tblModel = (DefaultTableModel) jTable.getModel();
    int selectedRowIndex = jTable.getSelectedRow();

    if (selectedRowIndex == -1) {
        JOptionPane.showMessageDialog(null, "Hãy chọn một sinh viên để cập nhật");
    } else {
        if (updatedStudent == null) {
            JOptionPane.showMessageDialog(null, "Không có thông tin sinh viên cần cập nhật");
            return; // Exit the method if updatedStudent is null
        }else {
        // Gọi hàm updateStudent để cập nhật thông tin sinh viên trong cơ sở dữ liệu
        int updateResult = updateStudent(updatedStudent);
        if (updateResult > 0) {
            // Cập nhật thông tin trong bảng
            jTable.setValueAt(updatedStudent.getName(), selectedRowIndex, 1);
            jTable.setValueAt(updatedStudent.getGender(), selectedRowIndex, 2);
            jTable.setValueAt(updatedStudent.getMailId(), selectedRowIndex, 3);
            jTable.setValueAt(updatedStudent.getMobileNo(), selectedRowIndex, 4);
            jTable.setValueAt(updatedStudent.getBranch(), selectedRowIndex, 5);
            
            JOptionPane.showMessageDialog(null, "Đã cập nhật thông tin sinh viên thành công");
        } else if (updateResult == 0) {
            JOptionPane.showMessageDialog(null, "Không tìm thấy sinh viên với ID đã cho");
        } else {
            JOptionPane.showMessageDialog(null, "Lỗi cập nhật thông tin sinh viên");
        }
      }
    }//GEN-LAST:event_btnUpdateActionPerformed
   }
    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        txtName.setText("");
        txtMail.setText("");
        txtMobile.setText("");
        txtPass.setText("");
        txtRepass.setText("");
        cbBranch.setSelectedItem("");
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
       this.dispose();
    }//GEN-LAST:event_btnExitActionPerformed

     private void addDataToTableModel() {
        List<Student> studentList = getStudents(); // Phương thức lấy danh sách sinh viên từ cơ sở dữ liệu

        for (Student student : studentList) {
            Object[] data = {
                student.getId(),
                student.getName(),
                student.getGender(),
                student.getMailId(),
                student.getMobileNo(),
                student.getBranch()
            };
        DefaultTableModel tableModel = (DefaultTableModel) jTable.getModel();
            tableModel.addRow(data);
        }
    }

   public List<Student> getStudents() {
   Connection con = null;
   PreparedStatement ps = null;
   ResultSet rs = null;
    List<Student> studentList = new ArrayList<>();
    con = ConnectionFactory.getConennection();
    try {
        String query = "SELECT * FROM student";
        ps = con.prepareStatement(query);
        rs = ps.executeQuery();
        
        while (rs.next()) {
            int id = rs.getInt("id");
            String name = rs.getString("name");
            String gender = rs.getString("gender");
            String mailId = rs.getString("mailid");
            String mobileNo = rs.getString("mobile_no");
            String branch = rs.getString("branch");
            
            Student student = new Student(id, name, gender, mailId, mobileNo,branch);
            studentList.add(student);
        }
        
        return studentList;
    } catch (SQLException e) {
        e.printStackTrace();
        return null;
    }
}
   
  public int deleteStudent(long studentId) {
   Connection con = null;
   PreparedStatement ps = null;
   ResultSet rs = null;
    con = ConnectionFactory.getConennection();
    try {
        String query = "DELETE FROM student WHERE id=?";
        ps = con.prepareStatement(query);
        ps.setLong(1, studentId);
        
        int rowsAffected = ps.executeUpdate();
        System.out.println("Deleted student: " + rowsAffected);
        
        return rowsAffected;
    } catch (SQLException e) {
        e.printStackTrace();
        return -2;
    }
}  
  public int updateStudent(Student student) {
    Connection con = null;
    PreparedStatement ps = null;
    ResultSet rs = null;
    con = ConnectionFactory.getConennection();
    try {
        String query = "UPDATE student SET name=?, gender=?, mailid=?, mobile_no=?, branch=? WHERE id=?";
        ps = con.prepareStatement(query);
        ps.setString(1, student.getName());
        ps.setString(2, student.getGender());
        ps.setString(3, student.getMailId());
        ps.setString(4, student.getMobileNo());
        ps.setString(5, student.getBranch());
        ps.setLong(6, student.getId());
         System.out.println(student.getName());
            int rowsAffected = ps.executeUpdate();
    System.out.println("Updated student: " + rowsAffected);

    return rowsAffected;
} catch (SQLException e) {
    e.printStackTrace();
    return -2;
} finally {
    // Đảm bảo đóng kết nối và PreparedStatement sau khi hoàn thành
    if (ps != null) {
        try {
            ps.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    if (con != null) {
        try {
            con.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnRegister;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdatetable;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbBranch;
    private javax.swing.JComboBox<String> cbCourses;
    private javax.swing.JComboBox<String> cbSemester;
    private com.toedter.calendar.JDateChooser dateDOB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lbBranch;
    private javax.swing.JLabel lbCourses;
    private javax.swing.JLabel lbGender;
    private javax.swing.JLabel lbHintDob;
    private javax.swing.JLabel lbMail;
    private javax.swing.JLabel lbMobile;
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbPass;
    private javax.swing.JLabel lbRePass;
    private javax.swing.JLabel lbTitle;
    private javax.swing.JRadioButton rbFemale;
    private javax.swing.JRadioButton rbMale;
    private javax.swing.JTextField txtMail;
    private javax.swing.JTextField txtMobile;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPass;
    private javax.swing.JTextField txtRepass;
    private javax.swing.JLabel txtSemester;
    // End of variables declaration//GEN-END:variables
}
